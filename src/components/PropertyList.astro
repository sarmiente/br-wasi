---
// @ts-nocheck
import type { The0 } from "@api/[id_property].json";

const urlSearch = "https://api.wasi.co/v1/property/search?";
const take = 100;

const res = await fetch(`${urlSearch}id_company=${import.meta.env.ID_COMPANY}&wasi_token=${import.meta.env.WASI_TOKEN}&take=${take}&order_by=title`, {
  method: "POST",
    headers: {
      "Content-Type": "application/json; charset=UTF-8",
      Authentication: `Bearer ${import.meta.env.ID_COMPANY}`,
    }
});

const data = await res.json();

const properties = Object.keys(data)
  .filter(key => key !== 'total' && key !== 'status')
  .map(key => data[key]);


---


<section id="properties" class="py-12">
  <!-- Título del portafolio -->
  <h2 class="text-center text-xl md:text-3xl font-heading uppercase pt-10 pb-10">
    Explora nuestro portafolio de propiedades
  </h2>

  <!-- Filtros y búsqueda -->
  <div class="mx-auto w-2/3 md:w-1/2 flex flex-col md:flex-row items-center justify-between gap-4 mb-8">
    <!-- Campo de búsqueda -->
    <input
      type="search"
      class="search w-full  border border-gray-300 rounded-lg p-2 text-xs focus:outline-none focus:ring focus:ring-green-500 font-pattern"
      placeholder="Busca por titulo, ID de propiedad o precio" />

    <!-- Filtro de precio 
    <div x-data="{ isOpen: false }" class="w-full md:w-1/2 relative border border-gray-300 rounded-lg shadow-md bg-white">
      <button
        x-on:click="isOpen = !isOpen"
        type="button"
        class="flex w-full items-center justify-between p-4 text-gray-900 bg-gray-100 rounded-t-lg hover:bg-gray-200 transition"
      >
        <span class="text-sm font-medium">Filter by Price</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="h-5 w-5 transition-transform"
          :class="{ 'rotate-180': isOpen }"
        >
          <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
        </svg>
      </button>

      <div
        x-show="isOpen"
        x-cloak
        x-on:keydown.escape.window="isOpen = false"
        class="p-4 border-t bg-white rounded-b-lg"
      >
        <header class="flex items-center justify-between mb-4">
          <span class="text-sm text-gray-700">Price range: $0 - $600</span>
          <button
            type="button"
            class="text-sm text-green-600 underline hover:text-green-700"
          >
            Reset
          </button>
        </header>

        <div class="flex items-center justify-between gap-4">
          <label for="FilterPriceFrom" class="flex flex-col w-full">
            <span class="text-xs text-gray-500 mb-1">From</span>
            <input
              type="number"
              id="FilterPriceFrom"
              placeholder="0"
              class="w-full rounded-md border-gray-300 p-2 shadow-sm focus:ring focus:ring-green-500 sm:text-sm"
            />
          </label>

          <label for="FilterPriceTo" class="flex flex-col w-full">
            <span class="text-xs text-gray-500 mb-1">To</span>
            <input
              type="number"
              id="FilterPriceTo"
              placeholder="600"
              class="w-full rounded-md border-gray-300 p-2 shadow-sm focus:ring focus:ring-green-500 sm:text-sm"
            />
          </label>
        </div>
      </div>
    </div>
  -->
  </div>

  
    <!-- Contenedor de propiedades -->
<div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 p-5 sm:p-8 list">
  <!-- Cada propiedad -->
  {properties.map((property: The0) => (
    <div class="rounded-lg overflow-hidden shadow-lg transform transition duration-300 hover:scale-105 hover:shadow-2xl">
      <a href={`/propiedad/${property.id_property}`} class="block">
        <!-- Imagen de la propiedad -->
        <div class="relative">
          <img
            alt="Property Image"
            src={property.main_image.url_original}
            class="h-56 w-full object-cover"
          />
          <!-- Etiqueta de ubicación -->
          <div class="absolute top-2 right-2 bg-black bg-opacity-75 text-white text-xs px-3 py-1 rounded">
            <p class="font-display uppercase">{property.city_label}</p>
          </div>
        </div>

                                              <!-- Detalles de la propiedad -->
        <div class="p-4 bg-white">
                                              <!-- Título y precio -->
          <div class="mb-4">
            <h2 class="titulo text-lg font-medium font-heading text-gray-800 uppercase truncate">
              {property.title}
            </h2>
            <p class="text-sm text-gray-600 font-light font-display price uppercase ">
                  
              {
                property.for_sale === 'true' && property.sale_price_label && property.sale_price_label !== 0 ? (
                  <span>Precio de venta: {property.sale_price_label}</span>
                ) : property.for_rent === 'true' && property.rent_price_label && property.rent_price_label !== 0 ? (
                  <span>Precio de renta: {property.rent_price_label}</span>
                ) : null
              }
              

            </p>
          </div>
                                              <!-- Botón "View Property" -->
          <div class="flex items-center justify-between mt-4">
            <p class="text-xs text-gray-600 font-light font-display property-id">
              {property.id_property}
            </p>
  
                                              <!-- Botón "View Property" -->
            <div class="w-1/2 flex justify-end">
                <a
                  href={`/propiedad/${property.id_property}`}
                  class="bg-[#60C11C] font-pattern uppercase p-1.5 text-xs rounded-md"
                >
                  Ver propiedad
                </a>
            </div>
          </div>        
        </div>
      </a>
    </div>
  ))}
</div>





  <!-- Controles de paginación -->
  <div id="pagination-controls" class="text-center mt-8 ">
    <div class="inline-flex items-center justify-center gap-3">
      
    
      <ul class="pagination flex gap-4 font-display font-light "></ul>
    
      
    </div>
  </div>
  
</section>



<!-- Script para habilitar List.js -->
<script is:inline src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
<script is:inline>
  // Configuración de List.js
  var options = {
    valueNames: ['titulo', 'property-id', 'price'], // Clases a buscar
    listClass: 'list', // Clase que contiene los elementos
    searchClass: 'search', // Clase del input de búsqueda
    page: 6,
    pagination: true
  };

  // Inicialización
  var listProperties = new List('properties', options);
</script>
